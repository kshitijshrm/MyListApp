openapi: 3.0.0
paths:
  /app/console-api/subscription/{tenantId}:
    get:
      operationId: getAllSubscriptions
      summary: Get all subscriptions associated with a tenant
      description: >
        Get all subscriptions associated with a tenant. This list includes both
        solution and app subscriptions.


        When the tenant being queried is a developer tenant, there wont be any
        access restrictions applied and the user will be able to see all
        solution and application subscriptions associated with the tenant.


        **Access:**  Inorder to access this api, one must porvide the tenant
        specific user id in x-coreos-access header. In cause of a non-developer
        tenants, this user id is used to filter the list of subscriptions to
        only those that the user has access to. 
      parameters:
        - &a1
          name: x-coreos-access
          in: header
          description: coreos access token
          required: true
          schema:
            type: string
        - name: tenantId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SubscriptionDTO"
      tags: &a2
        - Subscription
  /app/console-api/subscription/{tenantId}/Settings:
    get:
      operationId: getAllSolutionSettings
      summary: Get all subscriptions settings associated with a tenant
      description: >
        Get all subscriptions settings associated with a tenant. This list
        includes both solution and app subscriptions.


        When the tenant being queried is a developer tenant, there wont be any
        access restrictions applied and the user will be able to see all
        solution and application subscriptions associated with the tenant.


        **Access:**  Inorder to access this api, one must porvide the tenant
        specific user id in x-coreos-access header. In cause of a non-developer
        tenants, this user id is used to filter the list of subscriptions to
        only those that the user has access to. 
      parameters:
        - *a1
        - name: tenantId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SubscriptionSettings"
      tags: *a2
  /app/console-api/subscription/{tenantId}/solutions/{solutionVersionId}:
    get:
      operationId: getAllApplicationsDetails
      summary: Get all apps associated with a solution version
      description: >
        Get all apps associated with a solution version. This list includes both solution and app subscriptions along with the addOn apps. 
      parameters:
        - *a1
        - name: tenantId
          required: true
          in: path
          schema:
            type: string
        - name: solutionVersionId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SolutionResponseDTO"
        "404":
          description: Solution not found based on provided solution version id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponseDTO"
      tags: *a2
  /app/console-api/health:
    get:
      operationId: check
      parameters: []
      responses:
        "200":
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example: &a3
                      database: &a4
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example: *a3
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
        "503":
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example: *a3
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example:
                      redis: &a5
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example:
                      database: *a4
                      redis: *a5
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
      tags:
        - Health
  /app/console-api/common/banners:
    get:
      operationId: getActiveBanners
      summary: Get all active banners applicable on a tenant
      description: >
        
        **Access:**  Inorder to access this api, one must pass the
        x-coreos-access header. 
      parameters:
        - name: x-coreos-access
          in: header
          description: coreos access token
          required: true
          schema:
            type: string
        - name: solutionId
          required: false
          in: query
          example: solution:9d672510-c6a7-4f03-a4b2-01c19dbd63a4
          schema:
            type: string
        - name: activeOnly
          required: false
          in: query
          example: "true"
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/BannerAllResponseDTO"
                  - $ref: "#/components/schemas/BannerLatestResponseDTO"
      tags:
        - Common
  /app/console-api/ping:
    get:
      operationId: getOk
      parameters: []
      responses:
        "200":
          description: ""
      tags:
        - Health
info:
  title: Developer Platform Console API
  description: >
    
    Console API is a <a
    href="https://learn.microsoft.com/en-us/azure/architecture/patterns/backends-for-frontends">
    Backend for frontend </a> REST API that provides the data and functionality
    required by the Console UI.
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  schemas:
    ApplicationUrlDTO:
      type: object
      properties:
        name:
          type: string
          description: The name of the url
          example: relativePath
        url:
          type: string
          description: The actual url item
          example: /app/my-app
        description:
          type: string
          description: The actual item description
          example: this is the description of app settings
      required:
        - name
        - url
        - description
    FileMetadataDTO:
      type: object
      properties:
        fileId:
          type: string
          description: File identifier
          example: 5f9b9c0e-7c1e-4b5d-8f9c-0e7c1eab5d8f
        fileName:
          type: string
          description: File name
          example: solution-image.png
        fileDescription:
          type: string
          description: File description
          example: Solution Image
        fileUrl:
          type: string
          description: File URL
          example: https://cdn.os1.delhivery.com/5f9b9c0e-7c1e-4b5d-8f9c-0e7c1eab5d8f
      required:
        - fileId
        - fileName
        - fileDescription
        - fileUrl
    ApplicationMenuDTO:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the menu item
          example: 5f9b9c0e-7c1e-4b5d-8f9c-0e7c1eab5d8f
        displayName:
          type: string
          description: The name of the menu item
          example: Create Order
        displayOrder:
          type: number
          description: The order in which the menu item should be displayed
          example: 1
        relativePath:
          type: string
          description: The relative path of the menu item
          example: /app/my-app/create-order
        icon:
          description: The icon associated with the menu item
          allOf:
            - $ref: "#/components/schemas/FileMetadataDTO"
      required:
        - id
        - displayName
        - displayOrder
        - relativePath
        - icon
    ApplicationDTO:
      type: object
      properties:
        appId:
          type: string
          description: The unique identifier of the application
          example: app:5f9b9c0e-7c1e-4b5d-8f9c-0e7c1eab5d8f
        appVersionId:
          type: string
          description: The unique identifier of the application version
          example: appversion:5f9b9c0e-7c1e-4b5d-8f9c-0e7c1eab5d8f
        listingName:
          type: string
          description: The name of the application
          example: My App
        version:
          type: string
          description: The human readable semantic version of the application
          example: 1.0.0
        urlPath:
          type: string
          deprecated: true
          description: >-
            
            The relative url path of the application. This field is deprecated.
            Use **appUrls:relativePath** instead
        appType:
          type: string
          description: The Type of the application
          example: web
          enum:
            - unspecified
            - web
            - mobile
            - backend
        description:
          type: string
          description: The description of the application to show in the UI
          example: My App is a sample application
        coreosUrn:
          type: string
          description: coreos appId
          example: platform:app:258a0fcc-d0c6-5964-bace-c15109ed21b5
        isPrivate:
          type: boolean
          description: Is the application to be displayed in the marketplace
        consoleCompatible:
          type: boolean
          description: Is the application to be displayed in the console
        appUrls:
          description: >-
            
            The list of url paths that are associated with the application. For
            web apps, relativePath should be used to access the application. In
            the presense of interface in the urlOverrides, the interface should
            be used to access the application
          type: array
          items:
            $ref: "#/components/schemas/ApplicationUrlDTO"
        urlOverrides:
          description: >
            
            Url overrides are stack specific urls that needs to take periority
            over the appUrls when the application is accessed from the tenant
            that belongs to the stack that is configured in the urlOverrides.


            For exmaple, When the console is being accessed from the tenant
            mytenant.os1.delhivery.com, and the teant mytenant belongs to stack
            logistax and the urlOverrides contains an entry for logistax, then
            the urlOverrides should be used to access the application insteand
            of appUrls. This logic is already performed as part of the API.
          type: array
          items:
            $ref: "#/components/schemas/ApplicationUrlDTO"
        icon:
          description: The icon associated with the application
          allOf:
            - $ref: "#/components/schemas/FileMetadataDTO"
        images:
          description: The image or screenshots associated with the application to be
            displayed in the marketplace
          type: array
          items:
            $ref: "#/components/schemas/FileMetadataDTO"
        shortDescription:
          type: string
          description: The short description of the application to be displayed in the
            marketplace
          example: My App is a sample application
        longDescription:
          type: string
          description: The long description of the application to be displayed in the
            marketplace
          example: My App is a sample application. This is a long description
        applicationMenu:
          description: Collection of sub menuitems that belong in the console sidenav.
          type: array
          items:
            $ref: "#/components/schemas/ApplicationMenuDTO"
        settingsIcon:
          description: The icon associated with the application
          allOf:
            - $ref: "#/components/schemas/FileMetadataDTO"
        settingPageRolesRequired:
          description: Roles required for user to access the settings page if it is a web
            app
          type: array
          items:
            type: string
      required:
        - appId
        - appVersionId
        - listingName
        - version
        - urlPath
        - appType
        - description
        - coreosUrn
        - isPrivate
        - consoleCompatible
        - appUrls
        - urlOverrides
        - icon
        - images
        - shortDescription
        - longDescription
        - applicationMenu
        - settingsIcon
        - settingPageRolesRequired
    SolutionDTO:
      type: object
      properties:
        solutionId:
          type: string
          description: Solution identifier in the OS1 platform
          example: solution:5f9b9c0e-7c1e-4b5d-8f9c-0e7c1eab5d8f
        solutionVersionId:
          type: string
          description: Identifier for the solution version whis is unique within the
            solution
          example: solutionVersion:5f9b9c0e-7c1e-4b5d-8f9c-0e7c1eab5d8f
        displayName:
          type: string
          description: Name of the solution to be displayed in the UI
          example: My Solution
        shortDescription:
          type: string
          description: Short description of the solution to be displayed in the UI
          example: My Solution Short Description
        longDescription:
          type: string
          description: Description of the solution to be displayed in the UI
          example: My Solution Description
        version:
          type: string
          description: Human readable semantic version of the solution
          example: 1.0.0
        images:
          description: Images associated with the solution to be displayed in the UI
          example:
            - fileId: file:5f9b9c0e-7c1e-4b5d-8f9c-0e7c1eab5d8f
              fileName: solution-image.png
              fileUrl: https://cdn.os1.delhivery.com/5f9b9c0e-7c1e-4b5d-8f9c-0e7c1eab5d8f
          type: array
          items:
            $ref: "#/components/schemas/FileMetadataDTO"
        icon:
          description: Icon of the solution to be displayed in the UI
          example:
            fileId: 5f9b9c0e-7c1e-4b5d-8f9c-0e7c1eab5d8f
            fileName: solution-icon.png
            fileUrl: https://cdn.os1.delhivery.com/5f9b9c0e-7c1e-4b5d-8f9c-0e7c1eab5d8f
          allOf:
            - $ref: "#/components/schemas/FileMetadataDTO"
        applications:
          description: Video of the solution to be displayed in the UI
          type: array
          items:
            $ref: "#/components/schemas/ApplicationDTO"
        isMarketplaceCompatible:
          type: boolean
          description: Is the solution compatible with the marketplace
          example: true
        isConsoleCompatible:
          type: boolean
          description: Is the solution compatible with the console
          example: true
        coreAppSettings:
          description: Displays list of system apps settings for solution
          example:
            - appUrn: platform:app:mts
              displayName: MTS
              settingsUrl: /mts/settings
          type: array
          items:
            type: string
        landingPage:
          type: string
          description: relative url path of the landing page (launch page)
          example: /launch/control-tower
        allowedRedirectUrls:
          description: list of relative paths allowed to be accessed on this solution
          example:
            - /orders
            - /application/settings
          type: array
          items:
            type: string
        productGuideUrl:
          type: string
          description: url of the product guide for the current selected solution
          example:
            - www.dispatchoneguide.com
      required:
        - solutionId
        - solutionVersionId
        - displayName
        - shortDescription
        - longDescription
        - version
        - images
        - icon
        - applications
        - isMarketplaceCompatible
        - isConsoleCompatible
        - coreAppSettings
        - landingPage
        - allowedRedirectUrls
        - productGuideUrl
    SubscriptionStatusDTO:
      type: object
      properties:
        status:
          type: string
          description: >
            
            Status of the subscription. Possible values are: Active, Inactive,
            Deleted
          enum:
            - Active
            - Inactive
            - Deleted
          example: Active
        requestedAt:
          type: string
          description: >
            
            Date and time when the subscription was requested. This will be
            present for all subscriptions.
          example: 2020-12-01T00:00:00.000Z
        activatedAt:
          type: string
          description: >
            
            Date and time when the subscription was activated. This will be
            present for all subscriptions. This will not be present if failed to
            activate because of technical issues.
          example: 2020-12-01T00:00:00.000Z
      required:
        - status
        - requestedAt
        - activatedAt
    SubscriptionTierDTO:
      type: object
      properties:
        displayName:
          type: string
          description: |-
            
            Name of the subscription tier. Example: DEVELOPER, TRIAL, PRODUCTION
          enum:
            - DEVELOPER
            - TRIAL
            - PRODUCTION
          example: TRAIL
        planType:
          type: string
          description: |-
            
            Type of the subscription tier. Example: DEVELOPER, TRIAL, PRODUCTION
          enum:
            - DEVELOPER
            - TRIAL
            - PRODUCTION
          example: TRIAL
      required:
        - displayName
        - planType
    SubscriptionDTO:
      type: object
      properties:
        subscriptionId:
          type: string
          description: >-
            
            Subscription identifier for the subscription product. 

            Application and solution subsctiptions on a organization unique
            subscription product
          example: subscription:5f9b9c0e-7c1e-4b5d-8f9c-0e7c1eab5d8f
        applications:
          description: >-
            
            List of applications associated with the subscription. This array
            will be present only for application subscriptions


            **Note:** applications are defined as collection but one
            subscription will mostly have only one application. This is because,
            one subscription product can have only one application or solution
            associated with it.
          type: array
          items:
            $ref: "#/components/schemas/ApplicationDTO"
        solutions:
          description: >-
            
            List of solutions associated with the subscription. This array will
            be present only for solution subscriptions. Under the solution,
            there can exist multiple application that are part of the solution.


            **Note:** solutions are defined as collection but one subscription
            will mostly have only one solution. This is because, one
            subscription product can have only one application or solution
            associated with it.
          type: array
          items:
            $ref: "#/components/schemas/SolutionDTO"
        status:
          description: Status of the subscription. This will be present for all
            subscriptions and indicate if the subscription is active or not
          allOf:
            - $ref: "#/components/schemas/SubscriptionStatusDTO"
        tier:
          description: >-
            
            This filed indicates the subscription tier. This will be present for
            all subscriptions. This will help to idetify the number of days in
            which the subscription is active or exired.
          allOf:
            - $ref: "#/components/schemas/SubscriptionTierDTO"
      required:
        - subscriptionId
        - applications
        - solutions
        - status
        - tier
    SubscriptionSettings:
      type: object
      properties:
        foundation:
          description: Core apps identifier in the OS1 platform
          example:
            - coreAppId: platform:app:payments
              displayName: Payments
              settingsUrl: /app/payments/settings
          type: array
          items:
            type: string
        solutions:
          description: Contains all solution settings
          example:
            - solutionId: solution:5f9b9c0e-7c1e-4b5d-8f9c-0e7c1eab5d8f
              solutionVersionId: solutionVersion:5f9b9c0e-7c1e-4b5d-8f9c-0e7c1eab5d8f
              displayName: My Solution
              version: 1.0.0
              settings:
                - DisplayName: My App
                  settingsUrl: /my-app/settings
          type: array
          items:
            type: string
      required:
        - foundation
        - solutions
    NotFoundErrorResponseDTO:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/NotFoundErrorDTO"
        request:
          $ref: "#/components/schemas/StandardRequestDTO"
      required:
        - error
        - request
    StandardRequestDTO:
      type: object
      properties:
        url:
          type: string
        method:
          type: string
        params:
          type: object
        query:
          type: object
        body:
          type: object
      required:
        - url
        - method
        - params
        - query
        - body
    NotFoundErrorDTO:
      type: object
      properties:
        description:
          type: string
          description: Information about the error
          example: "[Relevant error message here]"
        additionalInfo:
          type: string
          description: Optional field with additional information about the error
          example: "[Relevant error message here]"
        statusCode:
          type: number
          description: Http status code of the response
          example: 404
        timestamp:
          type: string
          description: Timestamp of the response
          example: 2023-10-06T16:50:10.387Z
      required:
        - description
        - additionalInfo
        - statusCode
        - timestamp
    SolutionResponseDTO:
      type: object
      properties:
        solutionId:
          type: string
          description: A unique identifier for the solution
          example: solution:b31414f1-bc40-42c9-bcc0-ed7a47126441
          pattern: ^solution:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
        versions:
          description: List of solution versions that are associated with the solution
          type: array
          items:
            $ref: "#/components/schemas/SolutionVersionDTO"
        solutionType:
          type: string
          description: Solution type
          enum:
            - APP
            - API
          example: APP
          default: APP
        productFamily:
          type: string
          description: Product family group of the solution
        supportedCountries:
          description: Countries where the solution is supported
          type: array
          items:
            type: string
        organizationId:
          type: string
          description: Organization ID
      required:
        - solutionId
        - versions
        - productFamily
        - supportedCountries
        - organizationId
    SolutionVersionDTO:
      type: object
      properties:
        createdAt:
          type: string
          description: UTC timestamp in ISO format of the moment of creation
        createdBy:
          type: string
          description: UserId of the user who initiated the creation
        updatedAt:
          type: string
          description: UTC timestamp in ISO format of the moment of updation
        updatedBy:
          type: string
          description: UserId of the user who initiated the updation
        displayName:
          type: string
          description: Solution name to be displayed in the marketplace
          example: Vehicle Routing
        longDescription:
          type: string
          description: Solution description to be displayed in the marketplace
          example: This is a solution for vehicle routing used to optimize routes for
            delivery
        shortDescription:
          type: string
          description: Solution short description to be displayed in the marketplace
          example: This is a solution for vehicle routing
        isConsoleCompatible:
          type: boolean
          description: Boolean to indicate if the solution is compatible with marketplace
          example: true
        solutionId:
          type: string
          description: A unique identifier for the solution version
          example: solutionversion:b31414f1-bc40-42c9-bcc0-ed7a47126441
          pattern: ^solutionversion:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
        solutionVersionId:
          type: string
          description: A unique identifier for the solution version
          example: solutionversion:b31414f1-bc40-42c9-bcc0-ed7a47126441
          pattern: ^solutionversion:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
        version:
          type: string
          description: Human readable semantic version of the solution
          example: 1.0.0
        images:
          description: List of images associated with the solution
          type: array
          items:
            $ref: "#/components/schemas/FileMetadataDTO"
        icon:
          description: Icon associated with the solution
          type: array
          items:
            $ref: "#/components/schemas/FileMetadataDTO"
        applications:
          description: List of applications that are part of the solution
          type: array
          items:
            $ref: "#/components/schemas/SolutionApplicationDTO"
        listingId:
          type: string
          description: Listing id of the solution
      required:
        - createdAt
        - createdBy
        - updatedAt
        - updatedBy
        - displayName
        - longDescription
        - shortDescription
        - isConsoleCompatible
        - solutionId
        - solutionVersionId
        - version
        - images
        - icon
        - applications
        - listingId
        
    SolutionApplicationDTO:
      type: object
      properties:
        appId:
          type: string
          description: A unique identifier for the application
          example: app:bf17e158-1951-47f9-84f1-e50aeb59fac2
          pattern: ^app:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
        appVersionId:
          type: string
          description: A unique identifier for the application version in an application
          example: appversion:bf17e158-1951-47f9-84f1-e50aeb59fac2
          pattern: ^appversion:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
        listingId:
          type: string
          description: ListingId of the application in the solution
        listingName:
          type: string
          description: displayName of the application in the solution
        semver:
          type: string
          description: Semantic version number of the application in the solution
      required:
        - appId
        - appVersionId
        - listingId
        - listingName
        - semver
    BannerMessageDataDTO:
      type: object
      properties:
        activityStartTime:
          type: string
          description: banner activity start time in ISO
          example: 2024-08-29T23:00:00.000Z
        activityEndTIme:
          type: string
          description: banner activity end time in ISO
          example: 2024-08-29T23:30:00.000Z
        activityDate:
          type: string
          description: banner activity date in ISO
          example: 2024-08-29
      required:
        - activityStartTime
        - activityEndTIme
        - activityDate
    BannerContentDTO:
      type: object
      properties:
        message:
          type: string
          description: message to be displayed
          example: We have a planned for maintenance from {{activityStartTime}} to
            {{activityEndTime}} on {{activityDate}}. During this time this
            application will be temporarily unavailable.
        data:
          description: JSON data whose properties will be injected into the content
          allOf:
            - $ref: "#/components/schemas/BannerMessageDataDTO"
      required:
        - message
        - data
    BannerDTO:
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the banner
          example: banner:e27f429d-42ce-499a-aa43-dfcb1a1ddf3b
        title:
          type: string
          description: short title of the banner
          example: Scheduled Maintainance Alert!
        activeFromTime:
          type: string
          description: time in ISO from which this banner should be shown to users
          example: 2024-09-04T17:00:00.000Z
        activeUntilTime:
          type: string
          description: time in ISO till which this banner should remain shown to users
          example: 2024-09-04T22:00:00.000Z
        content:
          description: The banner message
          allOf:
            - $ref: "#/components/schemas/BannerContentDTO"
        levelType:
          description: level type of this banner
          example: stack
      required:
        - id
        - title
        - activeFromTime
        - activeUntilTime
        - content
        - levelType
    TenantSubscriptionDTO:
      type: object
      properties:
        subscriptionId:
          type: string
          description: subscription Id of the tenant
          example: subscription:3n672510-c6a7-4f03-a4b2-01c19dbd64q9
        solutionId:
          type: string
          description: solution Id this banner is applicable on
          example: solution:9d672510-c6a7-4f03-a4b2-01c19dbd63a4
      required:
        - subscriptionId
        - solutionId
    SolutionBannerDTO:
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the banner
          example: banner:e27f429d-42ce-499a-aa43-dfcb1a1ddf3b
        title:
          type: string
          description: short title of the banner
          example: Scheduled Maintainance Alert!
        activeFromTime:
          type: string
          description: time in ISO from which this banner should be shown to users
          example: 2024-09-04T17:00:00.000Z
        activeUntilTime:
          type: string
          description: time in ISO till which this banner should remain shown to users
          example: 2024-09-04T22:00:00.000Z
        content:
          description: The banner message
          allOf:
            - $ref: "#/components/schemas/BannerContentDTO"
        levelType:
          description: level type of this banner
          example: stack
        subscription:
          description: tenant subscription details
          allOf:
            - $ref: "#/components/schemas/TenantSubscriptionDTO"
      required:
        - id
        - title
        - activeFromTime
        - activeUntilTime
        - content
        - levelType
        - subscription
    BannerResponseDataDTO:
      type: object
      properties:
        foundation:
          description: list of active foundational banners
          type: array
          items:
            $ref: "#/components/schemas/BannerDTO"
        solution:
          description: list of active solution banners
          type: array
          items:
            $ref: "#/components/schemas/SolutionBannerDTO"
      required:
        - foundation
        - solution
    BannerAllResponseDTO:
      type: object
      properties:
        serverTime:
          type: string
          description: server time at the time of request
          example: 2024-09-06T17:00:00.000Z
        tenantTimeZone:
          type: string
          description: tenant timezone
          example: Asia/Kolkata
        banners:
          description: list of active banners
          allOf:
            - $ref: "#/components/schemas/BannerResponseDataDTO"
      required:
        - serverTime
        - tenantTimeZone
        - banners
    BannerLatestResponseDTO:
      type: object
      properties:
        serverTime:
          type: string
          description: server time at the time of request
          example: 2024-09-06T17:00:00.000Z
        tenantTimeZone:
          type: string
          description: tenant timezone
          example: Asia/Kolkata
        banner:
          description: current active banner, if present
          allOf:
            - $ref: "#/components/schemas/BannerDTO"
      required:
        - serverTime
        - tenantTimeZone
